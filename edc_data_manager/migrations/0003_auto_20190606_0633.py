# Generated by Django 2.2 on 2019-06-06 04:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import edc_utils.date


class Migration(migrations.Migration):

    dependencies = [
        ('edc_registration', '0017_auto_20190305_0123'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('edc_data_manager', '0002_auto_20190605_2207'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='datamanagerquery',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='datamanagerquery',
            name='recipients',
        ),
        migrations.RemoveField(
            model_name='datamanagerquery',
            name='recipients_as_list',
        ),
        migrations.RemoveField(
            model_name='datamanagerquery',
            name='response',
        ),
        migrations.RemoveField(
            model_name='datamanagerquery',
            name='status',
        ),
        migrations.RemoveField(
            model_name='historicaldatamanagerquery',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='historicaldatamanagerquery',
            name='recipients_as_list',
        ),
        migrations.RemoveField(
            model_name='historicaldatamanagerquery',
            name='response',
        ),
        migrations.RemoveField(
            model_name='historicaldatamanagerquery',
            name='status',
        ),
        migrations.AddField(
            model_name='datamanagerquery',
            name='data_dictionaries',
            field=models.ManyToManyField(blank=True, help_text='select all that apply', to='edc_data_manager.DataDictionary', verbose_name='Question(s)'),
        ),
        migrations.AddField(
            model_name='datamanagerquery',
            name='plan_of_action',
            field=models.TextField(blank=True, help_text='If required, provide a plan of action', null=True),
        ),
        migrations.AddField(
            model_name='datamanagerquery',
            name='query_text',
            field=models.TextField(default='query', help_text='Describe the query in detail.'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datamanagerquery',
            name='recipient',
            field=models.ForeignKey(blank=True, help_text='select a name from the list', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='recipient', to=settings.AUTH_USER_MODEL, verbose_name='Sent to'),
        ),
        migrations.AddField(
            model_name='datamanagerquery',
            name='registered_subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_registration.RegisteredSubject', verbose_name='Subject Identifier'),
        ),
        migrations.AddField(
            model_name='datamanagerquery',
            name='resolved',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=25, verbose_name='Has the query been satisfactorily resolved'),
        ),
        migrations.AddField(
            model_name='datamanagerquery',
            name='resolved_datetime',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Resolved on'),
        ),
        migrations.AddField(
            model_name='datamanagerquery',
            name='response_datetime',
            field=models.DateTimeField(default=edc_utils.date.get_utcnow, verbose_name='Date'),
        ),
        migrations.AddField(
            model_name='datamanagerquery',
            name='response_status',
            field=models.CharField(choices=[('open', 'Open'), ('feedback', 'Feedback'), ('resolved', 'Resolved')], default='open', max_length=25),
        ),
        migrations.AddField(
            model_name='datamanagerquery',
            name='response_text',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='datamanagerquery',
            name='subject_identifier',
            field=models.CharField(editable=False, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='datamanagerquery',
            name='visit_schedules',
            field=models.ManyToManyField(blank=True, help_text='select all that apply', to='edc_data_manager.VisitSchedule', verbose_name='Visit(s)'),
        ),
        migrations.AddField(
            model_name='historicaldatamanagerquery',
            name='plan_of_action',
            field=models.TextField(blank=True, help_text='If required, provide a plan of action', null=True),
        ),
        migrations.AddField(
            model_name='historicaldatamanagerquery',
            name='query_text',
            field=models.TextField(default='query', help_text='Describe the query in detail.'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatamanagerquery',
            name='recipient',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='select a name from the list', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Sent to'),
        ),
        migrations.AddField(
            model_name='historicaldatamanagerquery',
            name='registered_subject',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_registration.RegisteredSubject', verbose_name='Subject Identifier'),
        ),
        migrations.AddField(
            model_name='historicaldatamanagerquery',
            name='resolved',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=25, verbose_name='Has the query been satisfactorily resolved'),
        ),
        migrations.AddField(
            model_name='historicaldatamanagerquery',
            name='resolved_datetime',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Resolved on'),
        ),
        migrations.AddField(
            model_name='historicaldatamanagerquery',
            name='response_datetime',
            field=models.DateTimeField(default=edc_utils.date.get_utcnow, verbose_name='Date'),
        ),
        migrations.AddField(
            model_name='historicaldatamanagerquery',
            name='response_status',
            field=models.CharField(choices=[('open', 'Open'), ('feedback', 'Feedback'), ('resolved', 'Resolved')], default='open', max_length=25),
        ),
        migrations.AddField(
            model_name='historicaldatamanagerquery',
            name='response_text',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='historicaldatamanagerquery',
            name='subject_identifier',
            field=models.CharField(editable=False, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='datamanagerquery',
            name='report_datetime',
            field=models.DateTimeField(default=edc_utils.date.get_utcnow, verbose_name='Query date'),
        ),
        migrations.AlterField(
            model_name='datamanagerquery',
            name='sender',
            field=models.ForeignKey(help_text='select a name from the list', on_delete=django.db.models.deletion.PROTECT, related_name='sender', to=settings.AUTH_USER_MODEL, verbose_name='Query raised by'),
        ),
        migrations.AlterField(
            model_name='datamanagerquery',
            name='title',
            field=models.CharField(help_text='A short title describing this query', max_length=35),
        ),
        migrations.AlterField(
            model_name='historicaldatamanagerquery',
            name='report_datetime',
            field=models.DateTimeField(default=edc_utils.date.get_utcnow, verbose_name='Query date'),
        ),
        migrations.AlterField(
            model_name='historicaldatamanagerquery',
            name='sender',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='select a name from the list', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Query raised by'),
        ),
        migrations.AlterField(
            model_name='historicaldatamanagerquery',
            name='title',
            field=models.CharField(help_text='A short title describing this query', max_length=35),
        ),
        migrations.DeleteModel(
            name='Query',
        ),
    ]
