# Generated by Django 2.2.2 on 2019-07-13 19:19

import _socket
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("sites", "0002_alter_domain_unique"),
        ("edc_data_manager", "0008_auto_20190628_2247"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalQueryRule",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("title", models.CharField(db_index=True, max_length=150)),
                (
                    "query_text",
                    models.TextField(
                        blank=True,
                        help_text="Generic query text for auto-generated queries.",
                        null=True,
                    ),
                ),
                (
                    "reference_model",
                    models.CharField(editable=False, max_length=150, null=True),
                ),
                (
                    "reference_date",
                    models.CharField(
                        choices=[
                            ("report_datetime", "Report datetime (visit report)"),
                            ("drawn_datetime", "Specimen draw date (requisition)"),
                        ],
                        default="report_datetime",
                        editable=False,
                        max_length=25,
                    ),
                ),
                ("timing", models.IntegerField(default=48, verbose_name="Timing")),
                (
                    "timing_units",
                    models.CharField(
                        choices=[
                            ("hours", "Hours"),
                            ("days", "Days"),
                            ("weeks", "Weeks"),
                            ("months", "Months"),
                        ],
                        default="hours",
                        max_length=25,
                        verbose_name="Units",
                    ),
                ),
                (
                    "query_priority",
                    models.CharField(
                        choices=[("high", "High"), ("NORMAL", "Normal")],
                        default="NORMAL",
                        max_length=25,
                        verbose_name="Priority",
                    ),
                ),
                (
                    "rule_handler_name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("default", "Default"),
                            (
                                "lumbar_puncture_q13",
                                "Lumbar Puncture (Q13, 15, 21, 23, 24)",
                            ),
                        ],
                        default="default",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "reference",
                    models.CharField(db_index=True, default=uuid.uuid4, max_length=36),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Query Rule",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="QueryRule",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("title", models.CharField(max_length=150, unique=True)),
                (
                    "query_text",
                    models.TextField(
                        blank=True,
                        help_text="Generic query text for auto-generated queries.",
                        null=True,
                    ),
                ),
                (
                    "reference_model",
                    models.CharField(editable=False, max_length=150, null=True),
                ),
                (
                    "reference_date",
                    models.CharField(
                        choices=[
                            ("report_datetime", "Report datetime (visit report)"),
                            ("drawn_datetime", "Specimen draw date (requisition)"),
                        ],
                        default="report_datetime",
                        editable=False,
                        max_length=25,
                    ),
                ),
                ("timing", models.IntegerField(default=48, verbose_name="Timing")),
                (
                    "timing_units",
                    models.CharField(
                        choices=[
                            ("hours", "Hours"),
                            ("days", "Days"),
                            ("weeks", "Weeks"),
                            ("months", "Months"),
                        ],
                        default="hours",
                        max_length=25,
                        verbose_name="Units",
                    ),
                ),
                (
                    "query_priority",
                    models.CharField(
                        choices=[("high", "High"), ("NORMAL", "Normal")],
                        default="NORMAL",
                        max_length=25,
                        verbose_name="Priority",
                    ),
                ),
                (
                    "rule_handler_name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("default", "Default"),
                            (
                                "lumbar_puncture_q13",
                                "Lumbar Puncture (Q13, 15, 21, 23, 24)",
                            ),
                        ],
                        default="default",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "reference",
                    models.CharField(default=uuid.uuid4, max_length=36, unique=True),
                ),
                ("comment", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Query Rule",
                "verbose_name_plural": "Query Rules",
                "ordering": ("title",),
            },
        ),
        migrations.RemoveField(model_name="crfqueryrule", name="data_dictionaries"),
        migrations.RemoveField(model_name="crfqueryrule", name="recipients"),
        migrations.RemoveField(model_name="crfqueryrule", name="requisition_panel"),
        migrations.RemoveField(model_name="crfqueryrule", name="sender"),
        migrations.RemoveField(model_name="crfqueryrule", name="site"),
        migrations.RemoveField(model_name="crfqueryrule", name="visit_schedule"),
        migrations.RemoveField(
            model_name="crfqueryrule", name="visit_schedule_exclude"
        ),
        migrations.RemoveField(
            model_name="historicalcrfqueryrule", name="history_user"
        ),
        migrations.RemoveField(
            model_name="historicalcrfqueryrule", name="requisition_panel"
        ),
        migrations.RemoveField(model_name="historicalcrfqueryrule", name="sender"),
        migrations.RemoveField(model_name="historicalcrfqueryrule", name="site"),
        migrations.RemoveField(
            model_name="historicalrequisitionqueryrule", name="history_user"
        ),
        migrations.RemoveField(
            model_name="historicalrequisitionqueryrule", name="requisition_panel"
        ),
        migrations.RemoveField(
            model_name="historicalrequisitionqueryrule", name="sender"
        ),
        migrations.RemoveField(
            model_name="historicalrequisitionqueryrule", name="site"
        ),
        migrations.RemoveField(
            model_name="requisitionqueryrule", name="data_dictionaries"
        ),
        migrations.RemoveField(model_name="requisitionqueryrule", name="recipients"),
        migrations.RemoveField(
            model_name="requisitionqueryrule", name="requisition_panel"
        ),
        migrations.RemoveField(model_name="requisitionqueryrule", name="sender"),
        migrations.RemoveField(model_name="requisitionqueryrule", name="site"),
        migrations.RemoveField(
            model_name="requisitionqueryrule", name="visit_schedule"
        ),
        migrations.RemoveField(
            model_name="requisitionqueryrule", name="visit_schedule_exclude"
        ),
        migrations.RemoveIndex(
            model_name="dataquery", name="edc_data_ma_subject_1343fe_idx"
        ),
        migrations.RenameField(
            model_name="dataquery", old_name="auto_generated", new_name="rule_generated"
        ),
        migrations.RenameField(
            model_name="historicaldataquery",
            old_name="auto_generated",
            new_name="rule_generated",
        ),
        migrations.RemoveField(model_name="historicaldataquery", name="auto_reference"),
        migrations.AddField(
            model_name="dataquery",
            name="locked",
            field=models.BooleanField(
                default=False, help_text="If locked, this query will NEVER be reopened."
            ),
        ),
        migrations.AddField(
            model_name="dataquery",
            name="rule_reference",
            field=models.CharField(
                default=uuid.uuid4,
                max_length=150,
                null=True,
                verbose_name="Query rule reference",
            ),
        ),
        migrations.AddField(
            model_name="historicaldataquery",
            name="locked",
            field=models.BooleanField(
                default=False, help_text="If locked, this query will NEVER be reopened."
            ),
        ),
        migrations.AddField(
            model_name="historicaldataquery",
            name="rule_reference",
            field=models.CharField(
                default=uuid.uuid4,
                max_length=150,
                null=True,
                verbose_name="Query rule reference",
            ),
        ),
        migrations.AlterUniqueTogether(name="dataquery", unique_together=set()),
        migrations.AddIndex(
            model_name="dataquery",
            index=models.Index(
                fields=[
                    "subject_identifier",
                    "action_identifier",
                    "title",
                    "rule_reference",
                    "registered_subject",
                    "visit_schedule",
                ],
                name="edc_data_ma_subject_875fa1_idx",
            ),
        ),
        migrations.DeleteModel(name="CrfQueryRule"),
        migrations.DeleteModel(name="HistoricalCrfQueryRule"),
        migrations.DeleteModel(name="HistoricalRequisitionQueryRule"),
        migrations.DeleteModel(name="RequisitionQueryRule"),
        migrations.AddField(
            model_name="queryrule",
            name="data_dictionaries",
            field=models.ManyToManyField(
                blank=True,
                help_text="select all that apply",
                related_name="_queryrule_data_dictionaries_+",
                to="edc_data_manager.CrfDataDictionary",
                verbose_name="Question(s)",
            ),
        ),
        migrations.AddField(
            model_name="queryrule",
            name="recipients",
            field=models.ManyToManyField(
                blank=True,
                help_text="Select any additional recipients. Users in the `Site Data Manager` group are automatically included.",
                related_name="_queryrule_recipients_+",
                to="edc_data_manager.QueryUser",
                verbose_name="Send to",
            ),
        ),
        migrations.AddField(
            model_name="queryrule",
            name="requisition_panel",
            field=models.ForeignKey(
                blank=True,
                help_text="Requisition will be expected on day of visit.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="edc_data_manager.RequisitionPanel",
                verbose_name="Are responses linked to a requisition? If so, which",
            ),
        ),
        migrations.AddField(
            model_name="queryrule",
            name="sender",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="edc_data_manager.DataManagerUser",
                verbose_name="Query raised by",
            ),
        ),
        migrations.AddField(
            model_name="queryrule",
            name="sites",
            field=models.ManyToManyField(
                help_text="Leave blank to apply to all.", to="sites.Site"
            ),
        ),
        migrations.AddField(
            model_name="queryrule",
            name="visit_schedule",
            field=models.ManyToManyField(
                blank=True,
                help_text="select all that apply",
                related_name="_queryrule_visit_schedule_+",
                to="edc_data_manager.QueryVisitSchedule",
                verbose_name="Visit",
            ),
        ),
        migrations.AddField(
            model_name="queryrule",
            name="visit_schedule_exclude",
            field=models.ManyToManyField(
                blank=True,
                help_text="select all that apply",
                related_name="_queryrule_visit_schedule_exclude_+",
                to="edc_data_manager.QueryVisitSchedule",
                verbose_name="Visit (exclude)",
            ),
        ),
        migrations.AddField(
            model_name="historicalqueryrule",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalqueryrule",
            name="requisition_panel",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Requisition will be expected on day of visit.",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_data_manager.RequisitionPanel",
                verbose_name="Are responses linked to a requisition? If so, which",
            ),
        ),
        migrations.AddField(
            model_name="historicalqueryrule",
            name="sender",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_data_manager.DataManagerUser",
                verbose_name="Query raised by",
            ),
        ),
        migrations.RemoveField(model_name="dataquery", name="auto_reference"),
    ]
